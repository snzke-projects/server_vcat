<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vcat.module.ec.dao.ProductCategoryDao">
	
	<select id="get" resultType="ProductCategory">
		SELECT 
			a.id AS "id",
			a.name AS "name",
			a.icon AS "icon",
			a.description AS "description",
			a.parent_category_id AS "parent.id",
			(CASE WHEN a.parent_category_id IS NULL OR '' = a.parent_category_id OR '0' = a.parent_category_id THEN 'true' ELSE 'false' END) AS "isRoot",
			a.lft AS "lft",
			a.rgt AS "rgt",
			a.display_order AS "displayOrder",
            a.is_activate AS "isActivate"
		FROM ec_category a
		WHERE a.id = #{id}
        AND del_flag = 0
	</select>
    <select id="getRoot" resultType="ProductCategory">
        SELECT
            a.id AS "id",
            a.name AS "name",
            a.icon AS "icon",
            a.description AS "description",
            a.parent_category_id AS "parent.id",
            'true' AS "isRoot",
            a.lft AS "lft",
            a.rgt AS "rgt",
            a.is_activate AS "isActivate"
        FROM ec_category a
        WHERE a.parent_category_id = '0'
    </select>
      <select id="getListByCustomer" resultType="com.vcat.module.ec.entity.ProductCategory" parameterType="String">
		SELECT DISTINCT cc.id,cc.name,cc.icon FROM ec_category AS cc
		LEFT JOIN ec_category AS bb ON bb.parent_category_id=cc.id
		LEFT JOIN ec_category_product AS cp ON cp.category_id=bb.id
		LEFT JOIN ec_shop_product AS sp ON sp.product_id=cp.product_id
		WHERE sp.shop_id=#{_parameter}
		AND bb.is_activate=1
		AND cc.is_activate=1
		AND bb.del_flag = 0
		AND cc.del_flag = 0
		AND sp.del_flag=0
		ORDER BY cc.display_order ASC
    </select>

    <select id="getListByShopId" resultType="com.vcat.module.ec.entity.ProductCategory" parameterType="String">
		SELECT DISTINCT cc.id,cc.name,cc.icon FROM ec_category AS cc
		LEFT JOIN ec_category_product AS cp ON cp.category_id=cc.id
		LEFT JOIN ec_shop_product AS sp ON sp.product_id=cp.product_id
		WHERE sp.shop_id=#{shopId}
		AND cc.parent_category_id=#{parentCategoryId}
		AND cc.is_activate=1
		AND cc.del_flag = 0
		AND sp.del_flag=0
		ORDER BY cc.display_order ASC
    </select>
	<select id="findCategoryList" resultType="java.util.Map" parameterType="String">
		SELECT 
			a.id AS "id",
			a.name AS "name"
		FROM ec_category a
		WHERE 1=1
        AND a.del_flag = 0
        AND a.is_activate = 1
        AND a.parent_category_id  = #{_parameter}
        ORDER BY a.display_order ASC
	</select>
	<select id="findList" resultType="ProductCategory">
		SELECT 
			a.id AS "id",
			a.name AS "name",
			a.icon AS "icon",
			a.description AS "description",
			a.parent_category_id AS "parent.id",
			(CASE WHEN a.parent_category_id IS NULL OR '' = a.parent_category_id OR '0' = a.parent_category_id THEN 'true' ELSE 'false' END) AS "isRoot",
            a.lft AS "lft",
            a.rgt AS "rgt",
            a.display_order AS "displayOrder",
            a.is_activate AS "isActivate"
		FROM ec_category a
        WHERE del_flag = 0
        <if test="null != parent and parent.id != null and parent.id != ''">
            AND a.parent_category_id  = #{parent.id}
        </if>
        ORDER BY a.display_order ASC
	</select>

    <select id="findParent" resultType="ProductCategory">
        SELECT
        a.id AS "id",
        a.name AS "name",
        a.description AS "description",
        a.parent_category_id AS "parent.id",
        (CASE WHEN a.parent_category_id IS NULL OR '' = a.parent_category_id OR '0' = a.parent_category_id THEN 'true' ELSE 'false' END) AS "isRoot",
        a.lft AS "lft",
        a.rgt AS "rgt",
        a.display_order AS "displayOrder"
        FROM ec_category a
        WHERE a.id = (SELECT parent_category_id FROM ec_category WHERE id = #{id})
        AND del_flag = 0
    </select>

	<insert id="insert">
		INSERT INTO ec_category(
			id,
			name,
			icon,
			parent_category_id,
			description,
			lft,
			rgt,
			display_order,
			del_flag,
			create_by,
			create_date,
			update_by,
			update_date,
			is_activate
		) VALUES (
			#{id},
			#{name},
			#{icon},
			#{parent.id},
			#{description},
			#{lft},
			#{rgt},
			#{displayOrder},
			#{DEL_FLAG_NORMAL},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{ACTIVATED}
		)
	</insert>

	<insert id="addProductCategory">
		INSERT INTO ec_category_product(
		id,
		category_id,
		product_id,
		display_order
		) VALUES (
		#{sqlMap.uuid},
		#{id},
		#{sqlMap.productId},
		100
		)
	</insert>

	<delete id="deleteProductCategory">
		DELETE FROM ec_category_product
		WHERE product_id = #{id}
	</delete>

	<update id="update">
		UPDATE ec_category SET
			name = #{name},
			icon = #{icon},
			parent_category_id = #{parent.id},
			display_order = #{displayOrder},
			description = #{description},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>

    <update id="activate">
        UPDATE ec_category SET
        is_activate = #{isActivate}
        WHERE lft BETWEEN #{lft} AND #{rgt}
    </update>

    <update id="archivedProductWhenCancelActivate">
        UPDATE ec_product p LEFT JOIN ec_category_product cp ON p.id = cp.product_id LEFT JOIN ec_category c ON cp.category_id = c.id
        SET p.archived = 1
        WHERE c.lft BETWEEN (SELECT lft FROM ec_category where id = #{id}) AND (SELECT rgt FROM ec_category where id = #{id})
        AND p.archived = 0
    </update>

    <select id="getLeft" resultType="Integer">
        SELECT CASE WHEN lft = rgt - 1 THEN lft ELSE rgt - 1 END
        FROM ec_category
        WHERE id = #{id};
    </select>

    <update id="updateLFTBeforeInsert">
        UPDATE ec_category
        SET lft = lft + 2
        WHERE lft > #{lft}
        AND del_flag = 0
    </update>

    <update id="updateRGTBeforeInsert">
        UPDATE ec_category
        SET rgt = rgt + 2
        WHERE rgt > #{rgt}
        AND del_flag = 0
    </update>
	
	<update id="delete">
		UPDATE ec_category
        SET del_flag = 1
		WHERE lft BETWEEN #{lft} AND #{rgt}
	</update>

    <update id="updateLFTAfterDelete">
      UPDATE ec_category
      SET lft = lft - #{width}
      WHERE lft > #{lft}
        AND del_flag = 0
    </update>

    <update id="updateRGTAfterDelete">
      UPDATE ec_category
      SET rgt = rgt - #{width}
      WHERE rgt > #{rgt}
        AND del_flag = 0
    </update>

    <update id="updateL">
        UPDATE ec_category
        SET lft = #{lft}
        WHERE id = #{id}
    </update>

    <update id="updateR">
        UPDATE ec_category
        SET rgt = #{rgt}
        WHERE id = #{id}
    </update>

    <select id="hasChild" resultType="Boolean">
        SELECT
        CASE WHEN COUNT(1) > 0 THEN 'true' ELSE 'false' END
        FROM ec_category
        WHERE parent_category_id = #{id}
    </select>
    <select id="getHighestOrder" resultType="Integer">
        SELECT IFNULL(MAX(display_order),0) FROM ec_category WHERE parent_category_id = #{id}
    </select>
    <select id="findBrandList" resultType="com.vcat.module.ec.entity.Brand">
	    SELECT DISTINCT b.id,b.name
		FROM ec_category AS cc
		JOIN ec_category_brand AS cb ON cb.category_id=cc.id
		JOIN ec_brand AS b ON b.id=cb.brand_id
		WHERE cc.parent_category_id=#{_parameter}
		AND cc.is_activate=1
		AND cc.del_flag=0
    </select>
</mapper>