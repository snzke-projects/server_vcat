<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vcat.module.ec.dao.CustomerAddressDao">
<resultMap id="BaseResultMap" type="com.vcat.module.ec.entity.CustomerAddress">
		<id column="id" property="id" />
		<result column="customer_id"  property="customer.id" />
		<result column="address_name"  property="addressName" />
		<result column="is_default"  property="isDefault" />
		<association column="address_id"
			select="com.vcat.module.ec.dao.AddressDao.select" property="address"
			javaType="com.vcat.module.ec.entity.Address" />

</resultMap>
<sql id="Base_Column_List">
	id,
	customer_id,
	address_id,
	address_name,
	is_default
</sql>
<sql id="Base_Where_Clause">
	<where>
		1=1
		<if test="id!=null and id!=''">
			AND id = #{id}
		</if>
		<if test="customer.id!=null and customer.id!=''">
			AND customer_id = #{customer.id}
		</if>
		<if test="address.id!=null and address.id!=''">
			AND address_id = #{address.id}
		</if>
	</where>
</sql>
<select id="get" resultMap="BaseResultMap" parameterType="com.vcat.module.ec.entity.CustomerAddress">
	SELECT
	<include refid="Base_Column_List" />
	FROM ec_customer_address
	<include refid="Base_Where_Clause" />
</select>
<select id="select" resultMap="BaseResultMap" parameterType="com.vcat.module.ec.entity.CustomerAddress">
    SELECT
    <include refid="Base_Column_List" />
    FROM ec_customer_address
    WHERE id = #{id}
</select>
<select id="getByCustomerAndAddress" resultMap="BaseResultMap" parameterType="com.vcat.module.ec.entity.CustomerAddress">
    SELECT
    <include refid="Base_Column_List" />
    FROM ec_customer_address
    WHERE address_id = #{address.id}
    AND customer_id = #{customer.id}
</select>
<select id="findAddressList" resultMap="BaseResultMap" parameterType="String">
	SELECT
	id,
	customer_id,
	address_id,
	address_name,
	is_default
	FROM ec_customer_address
	where 1=1 AND customer_id = #{_parameter}
</select>
<insert id="insert" parameterType="com.vcat.module.ec.entity.CustomerAddress">
	INSERT INTO ec_customer_address(
	id,
	customer_id,
	address_id,
	address_name,
	is_default,
	del_flag
	) VALUES (
	#{id},
	#{customer.id},
	#{address.id},
	#{addressName},
	#{isDefault},
	0
	)
</insert>
<select id="countAddress" resultType="java.util.Map" parameterType="String">
SELECT count(id) AS "count",address_id AS "addressId"
FROM ec_customer_address
WHERE customer_id=#{_parameter}
AND is_default=1
AND del_flag=0
</select>
<select id="getAddressList" resultType="com.vcat.module.ec.entity.Address" parameterType="String" >
	SELECT ca.address_id AS "id",sa1.id AS "provinceId",sa1.name AS "province",
	sa2.id AS "cityId",sa2.name AS "city",sa3.id AS "districtId",sa3.name AS "district",
	a.detail_address,a.delivery_name,a.delivery_phone,ca.address_name AS "name",
	ca.is_default AS "def"
	FROM ec_customer_address AS ca
	LEFT JOIN ec_address AS a ON a.id=ca.address_id
	LEFT JOIN sys_area AS sa1 ON sa1.id=a.province_id
	LEFT JOIN sys_area AS sa2 ON sa2.id=a.city_id
	LEFT JOIN sys_area AS sa3 ON sa3.id=a.district_id
	WHERE ca.customer_id=#{buyerId}
	AND ca.del_flag=0
	<if	test="condition != null and condition != ''">
		and (a.delivery_phone like concat('%',#{condition},'%') or  concat(sa1.name,sa2.name,sa3.name,a.detail_address) like concat('%',#{condition},'%') or delivery_name like concat('%',#{condition},'%'))
	</if>
	order by def desc
	LIMIT #{page.pageOffset},#{page.pageSize}
</select>
<select id="getDefaultAddressList" resultType="com.vcat.module.ec.entity.Address" parameterType="String" >
SELECT ca.address_id AS "id",sa1.id AS "provinceId",sa1.name AS "province",
sa2.id AS "cityId",sa2.name AS "city",sa3.id AS "districtId",sa3.name AS "district",
a.detail_address,a.delivery_name,a.delivery_phone,ca.address_name AS "name",
ca.is_default AS "def"
FROM ec_customer_address AS ca
LEFT JOIN ec_address AS a ON a.id=ca.address_id
LEFT JOIN sys_area AS sa1 ON sa1.id=a.province_id
LEFT JOIN sys_area AS sa2 ON sa2.id=a.city_id
LEFT JOIN sys_area AS sa3 ON sa3.id=a.district_id
WHERE ca.customer_id=#{_parameter}
AND ca.is_default=1
AND ca.del_flag=0
LIMIT 1
</select>
<select id="getAddressCounts" resultType="java.lang.Integer">
	SELECT
		count(1)
	FROM ec_customer_address AS ca
	LEFT JOIN ec_address AS a ON a.id=ca.address_id
	LEFT JOIN sys_area AS sa1 ON sa1.id=a.province_id
	LEFT JOIN sys_area AS sa2 ON sa2.id=a.city_id
	LEFT JOIN sys_area AS sa3 ON sa3.id=a.district_id
	WHERE ca.customer_id=#{buyerId}
	AND ca.del_flag=0
	<if	test="condition != null and condition != ''">
	and (a.delivery_phone like concat('%',#{condition},'%') or concat(sa1.name,sa2.name,sa3.name,a.detail_address) like concat('%',#{condition},'%') or delivery_name like concat('%',#{condition},'%'))
	</if>
</select>
<select id="getChooseAddress" resultType="com.vcat.module.ec.entity.Address">
	SELECT ca.address_id AS "id",sa1.id AS "provinceId",sa1.name AS "province",
	sa2.id AS "cityId",sa2.name AS "city",sa3.id AS "districtId",sa3.name AS "district",
	a.detail_address,a.delivery_name,a.delivery_phone,ca.address_name AS "name",
	ca.is_default AS "def"
	FROM ec_customer_address AS ca
	LEFT JOIN ec_address AS a ON a.id=ca.address_id
	LEFT JOIN sys_area AS sa1 ON sa1.id=a.province_id
	LEFT JOIN sys_area AS sa2 ON sa2.id=a.city_id
	LEFT JOIN sys_area AS sa3 ON sa3.id=a.district_id
	WHERE ca.customer_id=#{buyerId}
	AND a.id = #{addressId}
	AND ca.del_flag=0
	LIMIT 1
</select>


	<update id="updateDefault" parameterType="com.vcat.module.ec.entity.CustomerAddress">
	UPDATE ec_customer_address SET
	is_default=#{isDefault},
	address_name=#{addressName}
	WHERE customer_id=#{customer.id}
	AND address_id=#{address.id}
	AND del_flag=0
</update>
<update id="cancalDefault" parameterType="String">
	UPDATE ec_customer_address
	SET is_default=0
	WHERE customer_id=#{_parameter}
	AND is_default=1
	AND del_flag=0
</update>
<update id="deleteBuyerId" parameterType="java.util.Map">
UPDATE ec_customer_address
SET del_flag=1
WHERE customer_id=#{buyerId}
AND address_id=#{addressId}
</update>

</mapper>