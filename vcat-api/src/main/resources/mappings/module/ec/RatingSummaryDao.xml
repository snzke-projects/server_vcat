<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vcat.module.ec.dao.RatingSummaryDao">
<select id="countReviewList" resultType="int" parameterType="String">
	SELECT COUNT(rd2.id)
	FROM ec_rating_summary AS rs
	LEFT JOIN ec_rating_detail AS rd1 ON rd1.rating_summary_id=rs.id
	LEFT JOIN ec_review_detail AS rd2 ON rd2.id=rd1.id
	LEFT JOIN ec_customer AS cc ON cc.id=rd1.buyer_id
	WHERE rs.id=#{_parameter}
	AND rd2.is_display = 1
	AND  cc.user_name IS NOT NULL
</select>
<select id="getReviewList" resultType="java.util.Map">
	SELECT cc.user_name AS "buyerName",cc.avatar_url AS "avatarUrl",rd2.item_name AS "itemName",rd1.rating AS "rating",
	rd2.review_text AS "reviewText",rd2.submit_date AS "createDate"
	FROM ec_rating_summary AS rs
	LEFT JOIN ec_rating_detail AS rd1 ON rd1.rating_summary_id=rs.id
	LEFT JOIN ec_review_detail AS rd2 ON rd2.id=rd1.id
	LEFT JOIN ec_customer AS cc ON cc.id=rd1.buyer_id
	WHERE rs.id=#{productId}
	AND rd2.is_display = 1
	AND  cc.user_name IS NOT NULL
	ORDER BY rd2.submit_date DESC
	LIMIT #{page.pageOffset},#{page.pageSize}
</select>
<update id="updateRating" parameterType="String">
UPDATE 
  ec_rating_summary 
SET
  average_rating = 
  (SELECT 
    IFNULL(AVG(rating), 1) 
  FROM
    ec_rating_detail 
  WHERE rating_summary_id = #{_parameter}) 
WHERE id = #{_parameter}
</update>
    <insert id="addSummary">
        INSERT INTO ec_rating_detail (
        id,
        rating_summary_id,
        buyer_id,
        rating
        ) SELECT
          #{id}
          ,#{productId}
          ,#{customerId}
          ,IFNULL((SELECT lib.rating
                   FROM ec_product_item item
                       LEFT JOIN ec_category_product cp ON cp.product_id = item.product_id
                       LEFT JOIN ec_category c ON cp.category_id = c.id
                       LEFT JOIN ec_category parentC ON c.parent_category_id = parentC.id
                       LEFT JOIN ec_product p ON cp.product_id = p.id
                       LEFT JOIN ec_review_library lib ON 1 = 1
                       LEFT JOIN ec_category libc ON lib.category_id = libc.id
                   WHERE item.product_id = #{productId}
                         AND libc.lft BETWEEN parentC.lft AND parentC.rgt
                         AND lib.review_text IS NOT NULL
                   ORDER BY RAND()
                   LIMIT 1),5)
    </insert>
    <insert id="insert">
        INSERT INTO ec_rating_summary
        VALUES (#{product.id},1)
    </insert>
</mapper>