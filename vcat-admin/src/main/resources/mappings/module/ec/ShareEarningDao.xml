<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vcat.module.ec.dao.ShareEarningDao">
	<sql id="shareColumns">
			a.id AS "id",
			a.product_id AS "product.id",
			a.fund AS "fund",
			a.available_share AS "availableShare",
			a.start_time AS "startTime",
			a.end_time AS "endTime",
			a.is_activate AS "isActivate",
			a.title AS "title",
			a.img_url AS "imgUrl",
			a.activate_time AS "activateTime",
			(select count(1) from ec_share_earning_log sel where sel.share_id = a.id) AS "sharedCount",
			p.name AS "product.name",
			ec.id AS "product.category.id",
			ec.name AS "product.category.name"
	</sql>
	<sql id="shareJoins">
		LEFT JOIN ec_product p ON a.product_id = p.id
        LEFT JOIN ec_brand brand ON brand.id = p.brand_id
		LEFT JOIN ec_supplier supplier ON brand.supplier_id = supplier.id
		LEFT JOIN ec_category_product cp ON cp.product_id = p.id
		LEFT JOIN ec_category ec ON ec.id = cp.category_id
	</sql>
	<select id="get" resultType="ShareEarning">
		SELECT
		<include refid="shareColumns"/>
		FROM ec_share_earning a
		<include refid="shareJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="findList" resultType="ShareEarning">
		SELECT
		<include refid="shareColumns"/>
		FROM ec_share_earning a
		<include refid="shareJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		<if test="title != null and title != ''">
			AND (
				a.title like '%${title}%'
			OR
				p.name like '%${title}%'
			OR
				ec.name like '%${title}%'
			)
		</if>
		<if test="product != null and product.category != null and product.category.id != ''">
			AND ec.id = #{product.category.id}
		</if>
		<if test="sqlMap.st != null and sqlMap.st != ''">
			AND a.start_time > STR_TO_DATE(#{sqlMap.st},"%Y-%m-%d %H:%i:%s")
		</if>
		<if test="sqlMap.et != null and sqlMap.et != ''">
			AND STR_TO_DATE(#{sqlMap.et},"%Y-%m-%d %H:%i:%s") > a.end_time
		</if>
		ORDER BY a.is_activate ASC ,a.end_time ASC
	</select>

	<select id="getShareEarningList" resultType="ShareEarning">
		SELECT
		<include refid="shareColumns"/>
		FROM ec_share_earning a
		<include refid="shareJoins"/>
		WHERE a.product_id = #{id}
	</select>

	<select id="checkSameProductActivated" resultType="Boolean">
		SELECT CASE WHEN COUNT(1) > 0 THEN '1' ELSE '0' END
		FROM ec_share_earning shareEarning
		LEFT JOIN ec_product p ON p.id = shareEarning.product_id
		WHERE shareEarning.id NOT IN (#{id})
		AND p.id = (SELECT product_id FROM ec_share_earning WHERE id=#{id})
		AND shareEarning.is_activate = #{ACTIVATED}
		AND NOW() > shareEarning.start_time
		AND shareEarning.end_time > NOW()
	</select>

	<insert id="insert">
		INSERT INTO ec_share_earning(
			id,
			product_id,
			fund,
			is_activate,
			available_share,
			start_time,
			end_time,
			title,
			img_url,
			del_flag
		) VALUES (
			#{id},
			#{product.id},
			#{fund},
			#{isActivate},
			#{availableShare},
			#{startTime},
			#{endTime},
			#{title},
			#{imgUrl},
			#{DEL_FLAG_NORMAL}
		)
	</insert>
	<update id="update">
		UPDATE ec_share_earning SET
			fund = #{fund},
			available_share = #{availableShare},
			start_time = #{startTime},
			end_time = #{endTime},
			title = #{title},
			img_url = #{imgUrl},
			product_id = #{product.id}
		WHERE id = #{id}
	</update>
	<update id="delete">
		UPDATE ec_share_earning SET
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	<update id="activate">
		UPDATE ec_share_earning SET
			is_activate = #{ACTIVATED},
			activate_time = now()
		WHERE id = #{id}
	</update>

    <select id="getPieChartList" resultType="java.util.LinkedHashMap">
        SELECT
            t.name AS "name",
            count(1) AS "y"
        FROM
            ec_share_earning_log log
        LEFT JOIN ec_share_earning s ON s.id = log.share_id
        LEFT JOIN ec_shop shop ON shop.id = log.shop_id
        LEFT JOIN ec_3rd_type t ON t.id = log.3rd_type_id
        WHERE
            s.id = #{id}
        GROUP BY
            t.code
        UNION
            SELECT
                '尚未分享',
                (
                    SELECT
                        s.available_share - count(1)
                    FROM
                        ec_share_earning_log log
                    LEFT JOIN ec_share_earning s ON s.id = log.share_id
                    WHERE s.id = #{id}
                )
    </select>
    <select id="getPushTokenListByProductId" resultType="String">
        SELECT c.push_token AS "pushToken"
        FROM ec_customer c
        WHERE c.id IN (SELECT sp.shop_id FROM ec_shop_product sp WHERE sp.product_id = #{id} AND del_flag = 0)
        AND c.device_type = 3
    </select>
</mapper>